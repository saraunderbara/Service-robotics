import lejos.nxt.LCD;
import lejos.nxt.Motor;
import lejos.nxt.Sound;
import lejos.robotics.localization.OdometryPoseProvider;
import lejos.robotics.localization.PoseProvider;
import lejos.robotics.navigation.DifferentialPilot;
import lejos.robotics.navigation.Navigator;
import lejos.robotics.navigation.Pose;

public class motors extends Thread {

	private Navigator nav;
	private PoseProvider opp;
	private Pose poseStart;

	private boolean stoped;

	public motors(Navigator nav){
		this.nav = nav;
		opp = (OdometryPoseProvider) nav.getPoseProvider();
		poseStart = new Pose(0,5,0);
		this.start();
	}

	public void follow(){
		nav.followPath();
	}

	public boolean pathCompleted(){
		if(nav.pathCompleted()){
			return true;
		} else {
			return false;
		}
	}

	public void drivePathOne(){
		opp.setPose(poseStart);
		nav.addWaypoint(85, 5);	
	}

	public void drivePathTwo(){
		nav.addWaypoint(85, 175);
	}

	public void drivePathThree(){
		nav.addWaypoint(0, 185);
	}
	public boolean atWayPoint(){
		if(stoped){
			stoped = false;
			return true;
		} else {
			return false;
		}
	}
}
